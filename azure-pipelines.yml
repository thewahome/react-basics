# Node.js with webpack
# Build a Node.js project using the webpack CLI.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - master
    - releases/*
  tags:
    include:
    - v*

pool:
  vmImage: 'vs2017-win2016'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install'

  - script: |
      npm run build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    displayName: 'Build staging assets'

  - script: |
      export githubTag=$(git describe --abbrev=0 --tags)
      echo "##vso[task.setvariable variable=githubTag]$githubTag"
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    displayName: Set tag to env variable githubTag
    failOnStderr: true

  # - script: |
  #     dotnet publish ./src/server/ --configuration $(buildConfiguration) --output $BUILD_ARTIFACTSTAGINGDIRECTORY/win_x64 --self-contained true -r win-x64
  #   failOnStderr: true
  #   displayName: Build Win x64

  # - script: |
  #     dotnet publish ./src/server/ --configuration $(buildConfiguration) --output $BUILD_ARTIFACTSTAGINGDIRECTORY/linux_x64 --self-contained true -r linux-x64
  #   failOnStderr: true
  #   displayName: Build Linux x64

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/win_x64'
      artifactName: 'win_x64'
    displayName: Publish Win x64 artifacts

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/linux_x64'
      artifactName: 'linux_x64'
    displayName: Publish Linux x64 artifacts

  - task: ArchiveFiles@2
    displayName: Zip Win x64 artifacts
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/win_x64'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/react-basics.zip'
      replaceExistingArchive: true

  - task: ArchiveFiles@2
    displayName: Tar Linux x64 artifacts
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/linux_x64'
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/react-basics.tar.gz'
      replaceExistingArchive: true

  - task: GithubRelease@0
    displayName: 'Attach Linux x64 artifacts to GitHub Release'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    inputs:
      gitHubConnection: thewahome-github-connection
      repositoryName: Thewahome/react-basics
      assets: '$(Build.ArtifactStagingDirectory)/react-basics.tar.gz'
      action: edit
      target: '$(Build.SourceVersion)'
      tag: '$(githubTag)'
      addChangeLog: false
      assetUploadMode: replace

  - task: GithubRelease@0
    displayName: 'Attach Win x64 artifacts to GitHub Release'
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    inputs:
      gitHubConnection: thewahome-github-connection
      repositoryName: Thewahome/react-basics
      assets: $(Build.ArtifactStagingDirectory)/react-basics.zip
      action: edit
      target: '$(Build.SourceVersion)'
      tag: $(githubTag)
      addChangeLog: true
      assetUploadMode: replace
