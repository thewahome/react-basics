# Node.js with webpack
# Build a Node.js project using the webpack CLI.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - master
    - release/*
  tags:
    include:
    - v*

pool:
  vmImage: 'ubuntu-latest' 

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'install Node.js'

  - script: |
      npm install
    displayName: 'npm install'

  - script: |
      npm version
    displayName: 'bump up version'

  - script: |
      npm run build
    displayName: 'build artifacts'

  - task: CopyFiles@2
    displayName: 'copy files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/build'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.ArtifactStagingDirectory)'


  # # Archive files
  # # Compress files into .7z, .tar.gz, or .zip
  # - task: ArchiveFiles@2
  #   displayName: 'archive built assets'
  #   inputs:
  #     rootFolderOrFile: '$(Build.ArtifactStagingDirectory)' 
  #     includeRootFolder: true 
  #     archiveType: 'zip' # Options: zip, 7z, tar, wim
  #     tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
  #     archiveFile: '$(Build.ArtifactStagingDirectory)/react-basics-$(Build.BuildId).zip' 
  #     replaceExistingArchive: true 
  #     verbose: true # Optional
  #   #quiet: # Optional
    
  # - task: GithubRelease@0
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')
  #   displayName: 'create gitHub release'      
  #   inputs:
  #     gitHubConnection: thewahome-github-connection
  #     repositoryName: thewahome/react-basics
  #     tagSource: manual
  #     isPreRelease: true
  #     tag: $(Build.BuildNumber)      
  #     assets: |
  #       $(Build.ArtifactStagingDirectory)/*.zip
